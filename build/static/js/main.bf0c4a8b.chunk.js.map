{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","Footer","style","color","fontStyle","fontSize","href","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","length","date","Date","toISOString","Math","random","concat","value","onChange","target","placeholder","type","ReactDOM","render","document","getElementById"],"mappings":"mLAgBeA,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEdC,EAAQF,EAAKG,UACf,qBACA,iBACJ,OACE,qBAAkBC,UAAU,OAA5B,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,MAF7BF,EAAKO,K,QCPZC,EAAU,YAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACN,EAAIO,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBD,GAAMO,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCZrCI,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,uEAA+B,mBAAGC,KAAK,gCAAR,yBAA/B,eAKAC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EAAyB,KAE3B,qBAAKpB,UAAU,QAAf,SACGoB,KA6FQC,EAxFH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,IAEGzB,MAAK,SAAA0B,GACNT,EAASS,QAEV,IAEH,IA8CMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAACvC,GAAD,OAAUA,EAAKG,aAElE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcqB,QAASS,IACvB,6BACGK,EAAYE,KAAI,SAACxC,EAAMyC,GAAP,OACf,cAAC,EAAD,CAEEzC,KAAMA,EACNC,iBAAkB,kBAzDD,SAACM,GAC1B,IAAMP,EAAO2B,EAAMe,MAAK,SAACC,GAAD,OAAOA,EAAEpC,KAAOA,KAClCqC,EAAW,2BAAQ5C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDiC,EACU7B,EAAIqC,GACXjC,MAAK,SAAAkC,GACJjB,EAASD,EAAMa,KAAI,SAAAxC,GAAI,OAAIA,EAAKO,KAAOA,EAAKP,EAAO6C,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJlC,EAAKK,QADD,sCAGf2C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAEpC,KAAOA,SAyCR0C,CAAmBjD,EAAKO,MAF3CkC,QAOX,uBAAMS,SA1CM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB9C,GAAIoB,EAAM2B,OAAS,EACnBjD,QAASwB,EACT0B,MAAM,IAAIC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAG7BvB,EACUiB,GACP1C,MAAK,SAAAkC,GACJjB,EAASD,EAAMiC,OAAOf,IACxBf,EAAW,QA6BX,UACE,uBAAO+B,MAAOhC,EAASiC,SA1BJ,SAACX,GACxBrB,EAAWqB,EAAMY,OAAOF,QAyB+BG,YAAY,iBAC/D,wBAAQC,KAAK,SAAb,uBACA,yBAAQ3D,QAxBQ,SAAC6C,GACrBA,EAAMC,iBACNpB,GAAYD,IAsBR,kBACQA,EAAU,YAAc,YAGlC,cAAC,EAAD,Q,MC1GNmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bf0c4a8b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\r\n  const label = note.important\r\n    ? 'make not important'\r\n    : 'make important'\r\n  return (\r\n    <li key={note.id} className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note;","import axios from 'axios'\r\n// const baseUrl = `http://localhost:3005/notes`\r\nconst baseUrl = 'api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }\r\n\r\n// module.exports = {\r\n//   getAll: getAll,\r\n//   create: create, \r\n//   update: update,\r\n// }","import React, { useState, useEffect } from \"react\";\r\nimport Note from \"./components/Note\";\r\nimport noteService from \"./services/notes\";\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Built with ðŸ’œ by <a href=\"https://github.com/IfeOlulesi\">Ife Olulesi</a> 2021</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) return null \r\n  return (\r\n    <div className='error'>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n      setNotes(initialNotes);\r\n    });\r\n  }, []);\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find((n) => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  };\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    const noteObject = {\r\n      id: notes.length + 1,\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    };\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n      setNewNote(\"\");\r\n    });\r\n  };\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  const toggleShowAll = (event) => {\r\n    event.preventDefault();\r\n    setShowAll(!showAll);\r\n  };\r\n\r\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <ul>\r\n        {notesToShow.map((note, i) => (\r\n          <Note\r\n            key={i}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} placeholder=\"type here...\" />\r\n        <button type=\"submit\">Save Note</button>\r\n        <button onClick={toggleShowAll}>\r\n          Show {showAll ? \"important\" : \"all\"}\r\n        </button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}